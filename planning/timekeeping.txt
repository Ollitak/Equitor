17.1 (9h)
  * projektin aloitus
  * suunnittelua (kts. initial project structure planning-kansiosta)
  * backendin ensimmäisen version työstäminen, alustavien endpointtien
    luominen, mongoose schemat ja databaseyhteyksien avaaminen jne... 
    
18.1 (10h) 
  * alustavan backend-version viimeistely ja frontendin aloitus
  * user-scheman luominen databaseen ja schemojen väliset yhteydet
  * react front-endin aloitus, alustava versio aloitussivusta visualisointeineen 

19.1 (9h)
  * front-endin jatkaminen
  * alustavien toiminnallisuuksien lisääminen: sisäänkirjautumissivu, analyysin luontisivu,
    uloskirjautumismahdollisuus ja analyysin poistamismahdollisuus
  * token-perusteisen kirjautumisen implementointi
  
20.1 (9h)
  *  reduxin implementointi ja kommentointimahdollisuuden lisääminen
21.1 (12h)
  * semantic UI:n opettelu ja implementointi login formiin, Yup:n käyttöönotto. Haasteita muun muassa semantic ui:n ja formikin yhteensovittamisen kanssa.
24.1 (12h)
  * navigaatiomenun ja homepagen luominen pääasiassa Semantic UI:lla
  * yhden analyysin sivun ulkoasun tekeminen, muun muassa Semantic UI:n Gridin opettelu
  * analyysin backend scheeman laajennus ja vastaavat muutokset front-endiin
25.1 (10.5h)
  * uuden analyysin luomiseen käytettävän formin laajentaminen, mm. checkboxit joilla
    mahdollista renderöidä textboxeja ehdollisesti.
  * feedin rakentaminen semantic UI:lla
  * koodin jakaminen pienempiin komponentteihin ja moduuleihin
26.1 (11h)
  * filteröinnin implementointi
  * styling
  * käyttäjän luomiseen tarkoitetun formin luominen
27.1 (8h)
  * notifikaatioiden implementointi
  * utiliteettifunktioiden luominen mm. keskimääräisen ratingin laskelmiseen
  * filteröinnin laajentaminen
  * modalin implementointi kommentoiti-ikkunaan
28.1 (4.5h)
  * eslintin fiksaaminen (ei extendannut react-app:n default configia) ja lintteriongelmien fiksaus
  * prettierin asentaminen ja konffaaminen
  * yleinen stailaus
31.1 (7h)
  * backendin uudelleensuunnittelua: ajatuksena tehdä viesteistä oma kokoelma, mutta päätin olla implementoimatta
  * backendiin pieniä fiksauksia, esim delete vaatii nyt tokenin
  * my account -välilehden tekeminen ja tätä varten tarvittavan put endpointin luominen user kokoelmalle